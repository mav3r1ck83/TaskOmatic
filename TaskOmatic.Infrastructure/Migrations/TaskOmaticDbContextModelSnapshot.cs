// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskOmatic.Infrastructure;

#nullable disable

namespace TaskOmatic.Infrastructure.Migrations
{
    [DbContext(typeof(TaskOmaticDbContext))]
    partial class TaskOmaticDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("TaskOmatic.Domain.Entities.TaskEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("TaskOmatic.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Tony",
                            IsDeleted = false,
                            LastName = "Stark",
                            Username = "ironman"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Steve",
                            IsDeleted = false,
                            LastName = "Rogers",
                            Username = "cap"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Bruce",
                            IsDeleted = false,
                            LastName = "Banner",
                            Username = "hulk"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Thor",
                            IsDeleted = false,
                            LastName = "Odinson",
                            Username = "thor"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Natasha",
                            IsDeleted = false,
                            LastName = "Romanoff",
                            Username = "natasha"
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Clark",
                            IsDeleted = false,
                            LastName = "Kent",
                            Username = "superman"
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Bruce",
                            IsDeleted = false,
                            LastName = "Wayne",
                            Username = "batman"
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Diana",
                            IsDeleted = false,
                            LastName = "Prince",
                            Username = "wonderwoman"
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Barry",
                            IsDeleted = false,
                            LastName = "Allen",
                            Username = "flash"
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Arthur",
                            IsDeleted = false,
                            LastName = "Curry",
                            Username = "aquaman"
                        });
                });

            modelBuilder.Entity("TaskOmatic.Domain.Entities.TaskEntry", b =>
                {
                    b.HasOne("TaskOmatic.Domain.Entities.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskOmatic.Domain.Entities.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
